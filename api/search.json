[{"id":"a8d2f68c4c1a35e5c598fc1b4e6779ab","title":"5-表单与表格元素","content":"HTML表单元素和表格元素表单元素\n\n\n\n\n\n\n\n\n表单元素是网页与用户交互的一种方式，它允许用户输入信息并将其发送到服务器端进行处理。HTML提供了一些表单元素，用于创建表单界面，其中包括：\n\ninput：用于接收用户输入的各种数据，如文本、密码、日期、时间、文件等。\nselect：用于创建下拉菜单。\ntextarea：用于创建多行文本框。\nbutton：用于创建按钮。\nform：用于创建表单。\n\ninput元素\n\n\n\n\n\n\n\n\ninput元素是HTML表单元素中最常用的元素之一，它可以接收各种类型的用户输入，例如文本、密码、日期、时间、文件等。下面是input元素常用的属性和类型：\n常用属性：\n\ntype：指定input元素的类型，包括text、password、checkbox、radio、submit、reset、button、file等。\nname：指定input元素的名称，用于表单提交时识别不同的元素。\nvalue：指定input元素的值，通常用于默认值设置。\nplaceholder：指定input元素的占位符文本，提示用户输入内容的格式或意义。\ndisabled：指定input元素是否禁用。\n\n\n\n\n\n\n\n\n\n\n文本输入框是input元素中最常用的类型之一，它允许用户输入单行文本数据。下面是一个文本输入框的示例代码：\n&lt;label for=\"username\"&gt;用户名：&lt;/label&gt;\n&lt;input type=\"text\" id=\"username\" name=\"username\" placeholder=\"请输入用户名\" required&gt; \n\n这里我们使用了label元素来标注输入框的名称，for属性指定了label和input元素的关联关系。另外，我们还使用了placeholder属性来指定输入框的占位符文本，用于提示用户输入内容的格式或意义。required属性指定输入框为必填项，当用户未填写时会有提示信息。\n\n\n\n\n\n\n\n\n\n密码输入框也是input元素的一种类型，它与文本输入框的区别在于输入内容会被隐藏。下面是一个密码输入框的示例代码：\n&lt;label for=\"password\"&gt;密码：&lt;/label&gt;\n&lt;input type=\"password\" id=\"password\" name=\"password\" placeholder=\"请输入密码\" required&gt; \n\n这里我们同样使用了label元素来标注输入框的名称，for属性指定了label和input元素的关联关系。另外，我们还使用了placeholder属性来指定输入框的占位符文本，用于提示用户输入内容的格式或意义。required属性指定输入框为必填项，当用户未填写时会有提示信息。\n除了文本输入框，表单还包括单选框、复选框、下拉框等元素，让用户能够更方便地提交信息。\n单选框和复选框的HTML代码非常相似，主要区别在于单选框只允许用户选择其中的一个选项，而复选框则允许选择多个选项。\n以下是单选框和复选框的示例代码：\n&lt;label&gt;单选框：&lt;/label&gt;\n&lt;input type=\"radio\" name=\"gender\" value=\"male\" checked&gt;男\n&lt;input type=\"radio\" name=\"gender\" value=\"female\"&gt;女\n\n&lt;label&gt;复选框：&lt;/label&gt;\n&lt;input type=\"checkbox\" name=\"fruit\" value=\"apple\" checked&gt;苹果\n&lt;input type=\"checkbox\" name=\"fruit\" value=\"banana\"&gt;香蕉\n&lt;input type=\"checkbox\" name=\"fruit\" value=\"orange\"&gt;橙子\n\n上面的代码中，单选框使用&lt;input&gt;标签，设置type=”radio”表示它是一个单选框，使用name属性来给单选框分组，同一组中的单选框只允许选择一个，使用value属性来设置单选框的值，用checked属性来设置默认选中的单选框。\n复选框同理，使用&lt;input&gt;标签，设置type=”checkbox”表示它是一个复选框，同样使用name属性来给复选框分组，不同的是复选框允许多选，使用value属性来设置复选框的值，用checked属性来设置默认选中的复选框。\n在表单提交时，表单元素的值可以通过JavaScript获取，以实现数据处理和交互效果。\n除了上述表单元素，HTML还提供了许多其他类型的表单元素，如下拉框、文本域、按钮等。可以根据实际需求选择合适的表单元素来设计表单。\n学习HTML表单元素时，需要了解各种表单元素的使用场景和相关属性，以便在实际开发中使用。同时，需要注意表单元素的布局和样式，以提高表单的可用性和用户体验。\n","slug":"5-表单与表格元素","date":"2023-09-03T08:16:51.000Z","categories_index":"Html","tags_index":"HTML","author_index":"Aurora"},{"id":"217cc7ca739bc1739f03795392941882","title":"4-多媒体元素","content":"HTML 多媒体元素下面是一些常用的 HTML 多媒体标签：\n1、**&lt;img&gt;** 标签：用于嵌入图片。\n&lt;img src=\"image.jpg\" alt=\"图片\"&gt; \n\n2、**&lt;video&gt;** 标签：用于嵌入视频。\n&lt;video width=\"320\" height=\"240\" controls&gt;\n  &lt;source src=\"video.mp4\" type=\"video/mp4\"&gt;\n  &lt;source src=\"video.ogg\" type=\"video/ogg\"&gt;\n  Your browser does not support the video tag.\n&lt;/video&gt;\n\n3、**&lt;audio&gt;** 标签：用于嵌入音频。\n&lt;audio controls&gt;\n  &lt;source src=\"music.mp3\" type=\"audio/mpeg\"&gt;\n  &lt;source src=\"music.ogg\" type=\"audio/ogg\"&gt;\n  Your browser does not support the audio element.\n&lt;/audio&gt;\n\n在使用多媒体标签时，我们需要注意以下几点：\n\n在使用 &lt;img&gt; 标签时，应该始终为 alt 属性设置一个有意义的值，以便于屏幕阅读器和搜索引擎等无法直接显示图片的工具理解图片内容。\n在使用 &lt;video&gt; 和 &lt;audio&gt; 标签时，应该为标签设置 controls 属性，以便于用户能够控制媒体的播放和暂停等。\n在使用 &lt;video&gt; 和 &lt;audio&gt; 标签时，应该提供多种格式的媒体文件，以便于不同浏览器和设备能够兼容播放。\n在使用多媒体标签时，应该优化文件大小和加载速度，以提高网页的性能和用户体验。\n\n下面是一个使用多媒体标签的示例：\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;视频播放示例&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;视频播放示例&lt;/h1&gt;\n    &lt;video src=\"video.mp4\" controls width=\"640\" height=\"360\"&gt;\n      您的浏览器不支持 video 标签。\n    &lt;/video&gt;\n    &lt;h2&gt;音频播放示例&lt;/h2&gt;\n    &lt;audio src=\"audio.mp3\" controls&gt;\n      您的浏览器不支持 audio 标签。\n    &lt;/audio&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n\n在实际开发中，媒体元素的应用非常广泛，例如在网站中加入介绍视频、音频背景等等，都可以使用媒体元素来实现。同时，需要注意优化媒体文件大小，以提高页面加载速度。\n","slug":"4-多媒体元素","date":"2023-09-03T08:15:55.000Z","categories_index":"Html","tags_index":"HTML","author_index":"Aurora"},{"id":"4b67f2a4da5d8bfc5b3983644aac0900","title":"3-html语义化标签及常用布局元素","content":"HTML语义化标签一些常用的HTML语义化标签及其作用：\n\n**&lt;header&gt;**：定义文档或节的页眉。\n**&lt;nav&gt;**：定义导航链接。\n**&lt;main&gt;**：定义文档的主体内容。\n**&lt;article&gt;**：定义一个可以独立展示或分发的内容块，比如新闻文章、博客文章等。\n**&lt;aside&gt;**：定义一个页面或文章的旁注栏，比如侧边栏、广告等。\n**&lt;footer&gt;**：定义文档或节的页脚。\n\n1、如何正确使用语义化标签？\n\n\n\n\n\n\n\n\n\n在编写HTML时，应该根据文档的结构和内容选择合适的语义化标签。比如在编写一个新闻页面时，可以使用&lt;header&gt;标签定义标题和作者信息，&lt;nav&gt;标签定义导航链接，&lt;article&gt;标签定义文章内容等等。\n2、如何避免过度使用语义化标签？\n\n\n\n\n\n\n\n\n\n虽然使用语义化标签能够提高网页的可读性和可维护性，但过度使用也会造成代码冗余和不必要的复杂性。在编写HTML时，应该根据具体情况选择合适的标签，避免过度使用语义化标签。\n3、 如何兼容老旧浏览器？\n\n\n\n\n\n\n\n\n\n有些老旧的浏览器可能不支持HTML5的语义化标签，这时可以使用JavaScript或CSS来实现相应的效果。比如可以使用JavaScript将&lt;section&gt;标签转换为&lt;div&gt;标签，或使用CSS为语义化标签添加样式。\n以下是一个示例代码，演示如何使用HTML语义化标签来构建一个简单的网页结构：\n&lt;html lang=\"en\"&gt;\n  &lt;head&gt;\n    &lt;meta charset=\"UTF-8\" /&gt;\n    &lt;title&gt;HTML 语义化标签示例&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;header&gt;\n      &lt;h1&gt;网站标题&lt;/h1&gt;\n      &lt;nav&gt;\n        &lt;ul&gt;\n          &lt;li&gt;&lt;a href=\"#\"&gt;首页&lt;/a&gt;&lt;/li&gt;\n          &lt;li&gt;&lt;a href=\"#\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;\n          &lt;li&gt;&lt;a href=\"#\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/nav&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n      &lt;section&gt;\n        &lt;h2&gt;最新消息&lt;/h2&gt;\n        &lt;article&gt;\n          &lt;h3&gt;文章标题&lt;/h3&gt;\n          &lt;p&gt;文章内容&lt;/p&gt;\n        &lt;/article&gt;\n        &lt;article&gt;\n          &lt;h3&gt;文章标题&lt;/h3&gt;\n          &lt;p&gt;文章内容&lt;/p&gt;\n        &lt;/article&gt;\n      &lt;/section&gt;\n      &lt;aside&gt;\n        &lt;h2&gt;侧边栏&lt;/h2&gt;\n        &lt;ul&gt;\n          &lt;li&gt;&lt;a href=\"#\"&gt;热门文章&lt;/a&gt;&lt;/li&gt;\n          &lt;li&gt;&lt;a href=\"#\"&gt;推荐文章&lt;/a&gt;&lt;/li&gt;\n        &lt;/ul&gt;\n      &lt;/aside&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\n      &lt;p&gt;&amp;copy;2021 HTML 语义化标签示例&lt;/p&gt;\n    &lt;/footer&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n在这个示例中，我们使用了 HTML5 中新增的语义化标签，包括：\n\n&lt;header&gt;：网页的头部区域，通常包括网站的标题、导航栏等内容。\n&lt;nav&gt;：用于定义导航链接的区域。\n&lt;main&gt;：网页的主要内容区域。\n&lt;section&gt;：网页中的一个主要部分，比如新闻列表、文章列表等。\n&lt;article&gt;：网页中的一篇文章或一段独立的内容。\n&lt;aside&gt;：网页的侧边栏区域。\n&lt;footer&gt;：网页的底部区域，通常包括版权信息、联系方式等内容。\n\n使用语义化标签可以让网页的结构更加清晰，便于搜索引擎的抓取和理解。另外，还可以通过 CSS 样式来针对不同的语义化标签设置样式，提高网页的可读性和可访问性。\n问题：\n1、 语义化标签不被某些浏览器支持\n\n\n\n\n\n\n\n\n\n解决办法：可以使用Polyfill或者Modernizr等库来提供兼容性。\n2、部分标签的样式难以调整\n\n\n\n\n\n\n\n\n\n解决办法：可以在语义化标签中添加class属性，并在CSS中对这些类进行样式定义，这样可以很好地解决样式问题。\n3、 在使用语义化标签时，有些标签语义不明显，不易于理解\n\n\n\n\n\n\n\n\n\n解决办法：应该注意学习和了解HTML5规范中语义化标签的用法，掌握其语义。\n4、 考虑到兼容性问题，在一些场景下可能需要使用非语义化标签\n\n\n\n\n\n\n\n\n\n解决办法：在必要的情况下可以使用非语义化标签，但需要注意控制数量，尽量减少使用。同时，在使用非语义化标签时，应该为其添加合适的class和id属性，以便于CSS样式控制。\n&lt;header&gt;\n  &lt;h1&gt;这是一个标题&lt;/h1&gt;\n  &lt;nav&gt;\n    &lt;ul&gt;\n      &lt;li&gt;&lt;a href=\"#\"&gt;首页&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a href=\"#\"&gt;关于我们&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a href=\"#\"&gt;联系我们&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/nav&gt;\n&lt;/header&gt;\n&lt;main&gt;\n  &lt;article&gt;\n    &lt;header&gt;\n      &lt;h2&gt;这是一篇文章的标题&lt;/h2&gt;\n      &lt;p&gt;作者：John Doe&lt;/p&gt;\n      &lt;p&gt;发布日期：2023年5月12日&lt;/p&gt;\n    &lt;/header&gt;\n    &lt;section&gt;\n      &lt;p&gt;这是文章的内容。&lt;/p&gt;\n      &lt;p&gt;这是文章的内容。&lt;/p&gt;\n    &lt;/section&gt;\n    &lt;footer&gt;\n      &lt;p&gt;版权所有：XXX公司&lt;/p&gt;\n    &lt;/footer&gt;\n  &lt;/article&gt;\n  &lt;aside&gt;\n    &lt;h3&gt;相关文章&lt;/h3&gt;\n    &lt;ul&gt;\n      &lt;li&gt;&lt;a href=\"#\"&gt;文章1&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a href=\"#\"&gt;文章2&lt;/a&gt;&lt;/li&gt;\n      &lt;li&gt;&lt;a href=\"#\"&gt;文章3&lt;/a&gt;&lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/aside&gt;\n&lt;/main&gt;\n&lt;footer&gt;\n  &lt;p&gt;版权所有：XXX公司&lt;/p&gt;\n&lt;/footer&gt;\n\n\n\n","slug":"3-html语义化标签及常用布局元素","date":"2023-09-03T08:15:00.000Z","categories_index":"Html","tags_index":"HTML","author_index":"Aurora"},{"id":"69a852f21dbb821c754e6b41e2e47255","title":"2-html组成","content":"HTML组成HTML是超文本标记语言（HyperText Markup Language）的缩写，它是用于构建网页的基本语言之一。HTML由一系列标签（tag）组成，标签用于描述网页的结构和内容。\n以下是HTML的基本组成部分：\n\n\n\n\n\n\n\n\n\nDOCTYPE声明：这是HTML文档的第一行，用于指定文档类型。例如：\n&lt;!DOCTYPE html&gt; \n\n\n\n\n\n\n\n\n\n\nHTML标签：HTML文档中的所有内容都需要包含在HTML标签中。HTML标签由开始标签和结束标签组成，例如：\n&lt;html&gt;\n  &lt;!-- 此处为页面内容 --&gt;\n&lt;/html&gt; \n\n\n\n\n\n\n\n\n\n\nHead标签：Head标签用于定义文档的元数据，例如页面标题、编码方式等。Head标签位于HTML标签内，例如：\n&lt;head&gt;\n  &lt;title&gt;我的网页&lt;/title&gt;\n  &lt;meta charset=\"UTF-8\"&gt;\n&lt;/head&gt; \n\n\n\n\n\n\n\n\n\n\nBody标签：Body标签用于定义页面的主体内容，例如：\n&lt;body&gt;\n  &lt;h1&gt;欢迎来到我的网页&lt;/h1&gt;\n  &lt;p&gt;这是我的第一个网页。&lt;/p&gt;\n&lt;/body&gt; \n\n\n\n\n\n\n\n\n\n\n下面是一个完整的HTML示例代码：\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;我的网页&lt;/title&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;欢迎来到我的网页&lt;/h1&gt;\n    &lt;p&gt;这是我的第一个网页。&lt;/p&gt;\n    &lt;img src=\"myimage.png\" alt=\"我的图片\"&gt;\n  &lt;/body&gt;\n&lt;/html&gt; \n\n\n\n\n\n\n\n\n\n\n在实际开发中，需要注意HTML的语义化，即使用恰当的标签描述内容的结构和意义，以便浏览器、搜索引擎和其他设备更好地理解和解析页面内容。例如，使用标题标签（h1~h6）描述页面标题，使用段落标签（p）描述段落内容，使用列表标签（ul、ol、li）描述列表等。\n\n\n\n\n\n\n\n\n\n同时，还需要注意布局元素的使用，例如div、span、section、article、nav等，它们用于将页面内容划分为更加具有语义的区域，并进行样式和布局设置。\n\n\n\n\n\n\n\n\n\n最后，多媒体元素和表单元素是构建丰富交互体验的关键。例如，使用视频标签（video）和音频标签（audio）嵌入视频和音频内容，使用表单标签（form）、输入框标签（input）、下拉框标签（select）等实现数据的输入、提交和验证。\n","slug":"2-html组成","date":"2023-09-03T08:13:42.000Z","categories_index":"Html","tags_index":"HTML","author_index":"Aurora"},{"id":"cab79d0793565ed59dd4fbdcde0de157","title":"1.html基础","content":"HTML基础HTML组成\n\n\n\n\n\n\n\n\nHTML 文档由标签和内容组成。标签用于定义网页内容的结构，而内容则是标签中的文本和其他元素。\n标签\n\n\n\n\n\n\n\n\nHTML 标签用尖括号括起来，如 &lt;html&gt;、&lt;head&gt;、&lt;title&gt;、&lt;body&gt; 等等。每个标签都有一个起始标签和结束标签，例如 &lt;p&gt; 和 **&lt;/p&gt;**。一些标签也可以只有一个自闭合标签，例如 **&lt;img&gt;**。\n属性\n\n\n\n\n\n\n\n\nHTML 标签可以有属性，属性可以用来指定标签的某些特性，例如 id、class、style 等等。属性的格式为 属性名=”属性值“。\n注释\n\n\n\n\n\n\n\n\nHTML 注释以 &lt;!– 开头，以 –&gt; 结尾，可以用于添加注释或调试信息。\nHTML 语义化\n\n\n\n\n\n\n\n\nHTML 语义化是指使用具有语义的标签来编写 HTML，以便于浏览器、搜索引擎和开发人员理解页面内容。\n\n\n\n\n\n\n\n\n\n例如，使用 &lt;header&gt; 标签表示网页的页眉，使用 &lt;nav&gt; 标签表示导航栏，使用 &lt;main&gt; 标签表示主要内容区域等等。\n布局元素HTML 提供了一些用于布局的元素，包括：\n\n**&lt;div&gt;**：通常用于组织网页结构或添加样式。\n**&lt;span&gt;**：类似于 &lt;div&gt;，但通常用于内联元素。\n**&lt;section&gt;**：表示文档中的一个章节。\n**&lt;article&gt;**：表示文档中的一个独立文章。\n**&lt;aside&gt;**：表示文档中的侧边栏内容。\n**&lt;header&gt;**：表示文档中的页眉。\n**&lt;footer&gt;**：表示文档中的页脚。\n**&lt;nav&gt;**：表示文档中的导航栏。\n\n多媒体元素HTML 提供了一些用于添加多媒体内容的元素，包括：\n\n&lt;img&gt;：用于添加图片。\n&lt;video&gt;：用于添加视频。\n&lt;audio&gt;：用于添加音频。\n&lt;canvas&gt;：用于绘制图形。\n&lt;svg&gt;：用于绘制矢量图形。\n\n表单元素HTML 提供了一些用于创建表单的元素，包括：\n\n**&lt;form&gt;**：用于创建表单。\n**&lt;input&gt;**：用于添加输入框、单选框、复选框、文件选择框等等。\n**&lt;textarea&gt;**：用于添加文本框。\n**&lt;select&gt;**：用于添加下拉框。\n**&lt;button&gt;**：用于添加按钮。\n\n表格元素常用的表格元素包括：\n\n**&lt;table&gt;**：元素用于定义表格，可以设置表格的属性，例如边框线宽度、单元格之间的间距等等。\n**&lt;thead&gt;**：元素用于划分表格的页眉。\n**&lt;tbody&gt;**：元素用于划分表格的主体。\n**&lt;tfoot&gt;**：元素用于划分表格的页脚。\n**&lt;tr&gt;**：元素用于定义表格中的行。\n**&lt;th&gt;**：元素通常用于定义表格中的表头单元格。\n**&lt;td&gt;**：元素用于定义表格中的数据单元格。\n\n","slug":"1-html基础","date":"2023-09-03T08:12:18.000Z","categories_index":"Html","tags_index":"HTML","author_index":"Aurora"},{"id":"f567b76bda4ea7fd3c45f3bc79c37a3c","title":"javascript-learn","content":"\njs笔记js初识and学习资源W3schoolMore info: project\nMDN Web DocsMore info: project\n","slug":"javascript-learn","date":"2023-08-17T08:18:23.000Z","categories_index":"JS","tags_index":"js","author_index":"Aurora"},{"id":"3dcfe70b4b8c9ab61ab54f0c1f65202b","title":"github.io部署个人博客","content":"学习开始学习学习项目More info: project\ngit同时管理多个GitHub账号踩坑参考的项目More info: project 1\n这是比较早期的项目，在config的设置时，刚开始可以”hexo d”第一次部署成功，之后还是会报错,需要设置config中的【user】（只在mac中有用），同时要将全局配置 config global 取消掉（windows只有取消，才能在参考二中配置成功，windows的【user】个人感觉并没有用）。\n\n参考以下文章配置config，在ssh密钥文件夹下和.git文件夹下，并且在hexo 根目录下config配置好在ssh   config中的host,即在@后的名字。\nMore info: project 2\n\n总结在项目二的顺序是非常合适的：\n1、生成密钥使用到的代码\n生成了一对秘钥public\nssh-keygen -t rsa -C “youremail@gmail.com”\n\n再用另一个邮箱生成一对 private 的秘钥\nssh-keygen -t rsa -C “private_email@gmail.com”\n\n要注意重命名，否则会覆盖上面的密钥文件。假设我们生成了一对新的秘钥private 和private.pub。\n然后分别将这两对密钥加入到对应的 GitHub 账户中。\n2、编辑配置文件这个public，虽然并没有像第二个配置了 hexo 根目录下的@后的github_config，但是可能在ssh  config之中在第一位，在没有了全局global的配置下，可能为第一个为默认。\n编辑~/.ssh/config文件。如果该文件不存在的话，直接创建一个就好。里面的内容如下：\n# 公共\nHost github_public\nHostname ssh.github.com\nIdentityFile ~/.ssh/id_rsa\nport 22\n#个人\nHost github_private\nHostname ssh.github.com\nIdentityFile ~/.ssh/private\nport 22\n先把两个公钥添加到对应的 GitHub 账户，再进行下面的 ssh 连接测试，否则肯定是连接不上，会显示 permission denied。\nssh -T git@github_public\nssh -T git@github_private\n\n如果都能正常返回如下信息，就说明配置正常。\nHi xxx! You've successfully authenticated, but GitHub does not provide shell access.\n3、配置仓库设置在本次踩坑中为hexo根目录下，没有如（项目一）中config配置一样的名字。\n首先要删除GIT配置的全局用户名和邮件地址，接着在每个项目仓库中按照需求设置不同的user.name和 user.email：\n# 删除全局设置\ngit config --global --unset user.name\ngit config --global --unset user.email\n# 添加本地设置\n# 设置为私有仓库的GitHub账号邮箱和公有账号的GitHub邮箱。\ngit config --local user.name xxxx\ngit config --local user.email xxx\n在添加本地配置时，可能会失败，有可能因为当前目录下没有.git文件夹，所以可以当clone时在使用。\n之后在添加远程仓库的时候，把github.com 修改成github_public 或者github_private就好了（即上述文件中的HOST选项），用上面两个 Host 名称来代替原来的github.com ，（这一步很重要）如：\n# public user\ngit remote add origin git@github_public:xxx/example.git\n# priavate user\ngit remote add origin git@github_private:xxx/example.git \n\n其实，上面的配置文件的意思就是，按照你设置远程仓库时使用不同的 Host 名称，查找~/.ssh/config文件，使用不同的 SSH 文件连接到 GitHub。这样你就将是以不同的身份访问 GitHub 仓库。\n这个可能是，在本地写完代码时提交GitHub时使用，比如git init 之后，git remote链接到GitHub时使用，才有账号push。\n","slug":"newspaper-img","date":"2023-07-07T09:50:43.000Z","categories_index":"Hexo","tags_index":"hexo","author_index":"Aurora"}]